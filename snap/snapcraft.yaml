name: cura-slicer
version: '4.13.0'
base: core20
summary: Ultimaker Cura
description: |
  Trusted by millions of users, Ultimaker Cura is the world’s most popular 3D printing software.
  Prepare prints with a few clicks, integrate with CAD software for an easier workflow, or dive into custom settings for in-depth control. 

  https://ultimaker.com/software/ultimaker-cura

  **Disclaimer:**

  This is not an official version of Cura! It is build from the release sources but depends an other runtime libraries (Ubuntu Core 18, etc.) than the official version.
  All product and company names are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them. 

     sudo snap connect cura-slicer:mount-observe
     sudo snap connect cura-slicer:removable-media


architectures: 
  - amd64
  - arm64

grade: stable
confinement: strict

compression: lzo

icon: snap/gui/cura-icon.png


plugs:
  gnome-3-38-2004:
    default-provider: gnome-3-38-2004
    interface: content
    target: $SNAP/gnome-platform
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes:gtk-3-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes:icon-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes:sounds-themes


apps:
  cura-engine:
    adapter: full
    command: usr/bin/CuraEngine
    plugs:
      - network
      - network-bind
      - home
    
  cura:
    adapter: full
    extensions: [gnome-3-38]
    command: usr/bin/cura
    command-chain:
      - bin/desktop-launch
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8:$PYTHONPATH
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/blas:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/lapack"
      NO_AT_BRIDGE: 1
      QT_QPA_PLATFORMTHEME: gtk3
      DISABLE_WAYLAND: 1
      QT_AUTO_SCREEN_SCALE_FACTOR: 1
    plugs:
      - desktop
      - desktop-legacy
      - home
      - mount-observe
      - network
      - network-bind
      - network-manager-observe
      - opengl
      - raw-usb
      - removable-media
      - unity7
      - wayland
    

build-packages:
  - cmake
  - cython3
  - debhelper
  - dh-python
  - dpkg-dev
  - g++
  - gettext
  - git
  - libboost-dev
  - libnlopt-cxx-dev
  - libnlopt-dev
  - libpolyclipping-dev
  - libprotobuf-dev
  - libprotoc-dev
  - libpython3-dev
  - pkg-config
  - protobuf-compiler
  - pylint
  - python3-all-dev
  - python3-distutils
  - python3-numpy
  - python3-pytest
  - python3-setuptools
  - python3-sip
  - python3-sip-dev
  - python3-wheel
  - qtbase5-dev
  - wget

layout:
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm

parts:
  patches:
    plugin: dump
    source: patches
    prime: [-*]


  qt5:
    plugin: nil
    prime: [-*]
    override-build: |
      echo "deb http://archive.neon.kde.org/user focal main" | tee /etc/apt/sources.list.d/kde-neon.list
      wget -O - https://archive.neon.kde.org/public.key | apt-key add -
      apt update
      apt install -yy python3-pyqt5.qtopengl python3-pyqt5.qtquick python3-pyqt5.qtsvg \
      qml-module-qtqml-models2 qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings \
      qml-module-qtquick-controls qml-module-qtquick-controls2 qtwayland5 qmlscene python3-pyqt5.sip
    build-packages:
      - wget

  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - build-essential
      - dpkg-dev
      - qtbase5-dev
    stage-packages:
      - adwaita-icon-theme
      - dmz-cursor-theme
      - fcitx-frontend-qt5
      - gnome-themes-standard
      - libgdk-pixbuf2.0-0
      - libgtk2.0-0
      - libqt5gui5
      - libqt5svg5
      - libxkbcommon0
      - light-themes
      - locales-all
      - qt5-gtk-platformtheme
      - shared-mime-info
      - ttf-ubuntu-font-family
      - xdg-user-dirs
    after:
      - qt5


  libarcus:
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DBUILD_PYTHON=ON
      - -DBUILD_EXAMPLES=OFF
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    source-type: git
    source: https://github.com/Ultimaker/libArcus.git
    source-branch: "4.13.0"
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Arcus/01-remove-rpath.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Arcus/02-add-python-version.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Arcus/03-Allow-overriding-the-Python-version-in-CMake.patch"
    override-build: |
      snapcraftctl build
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      mv ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8/site-packages/* ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8
    stage-packages:
      - libpolyclipping22
      - libprotobuf17
      - libpython3.8
      - python3-sip


  libsavitar:
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=RELEASE-
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    source: https://github.com/Ultimaker/libSavitar.git
    source-branch: "4.13.0"
    build-packages:
      - libpugixml-dev
    stage-packages:
      - libpugixml1v5
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Savitar/2001-remove-rpath.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Savitar/2002-system-pugixml.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Savitar/2003-remove-cmake-python-install-hack.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/Savitar/2004-Allow-overriding-the-Python-version-in-CMake.patch"
    override-build: |
      snapcraftctl build
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      mv ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8/site-packages/* ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8
    after:
      - libarcus


  libcharon:
    plugin: cmake
    cmake-parameters: 
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    source: https://github.com/Ultimaker/libCharon.git
    source-branch: "4.13.0"
    stage-packages:
      - python3-certifi
      - python3-urllib3
    after:
      - libsavitar


  shapely:
    plugin: python
    source-type: tar
    source: https://github.com/Toblerity/Shapely/archive/refs/tags/1.8.0.tar.gz
    build-packages:
      - libgeos-dev
    stage-packages:
      - libgeos-3.8.0
      - libgeos-c1v5
    after:
      - libcharon
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/shapely/cython3.patch"
    override-build: |
      python3 setup.py --no-user-cfg install --prefix="${SNAPCRAFT_PART_INSTALL}/usr"
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      mv ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8/site-packages/Shapely-1.8.0-py3.8-linux-x86_64.egg/shapely ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8
    stage:
      -  -usr/bin/easy_install
      -  -usr/bin/f2py
      -  -usr/bin/f2py3
      -  -usr/bin/f2py3.8


  trimesh:
    plugin: python
    source-type: tar
    source: https://github.com/mikedh/trimesh/archive/3.9.42.tar.gz
    after:
      - shapely
    override-build: |
      python3 setup.py --no-user-cfg install --prefix="${SNAPCRAFT_PART_INSTALL}/usr"
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      mv ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8/site-packages/trimesh-3.9.42-py3.8.egg/trimesh ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8
    stage:
      -  -usr/bin/easy_install
      -  -usr/bin/f2py
      -  -usr/bin/f2py3
      -  -usr/bin/f2py3.8


  sentry-sdk:
    plugin: python
    source-type: tar
    source: https://github.com/getsentry/sentry-python/releases/download/1.0.0/sentry-sdk-1.0.0.tar.gz
    after:
      - trimesh
    override-build: |
      python3 setup.py --no-user-cfg install --prefix="${SNAPCRAFT_PART_INSTALL}/usr"
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      mv ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8/site-packages/sentry_sdk-1.0.0-py3.8.egg/sentry_sdk ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.8
    stage:
      -  -usr/bin/easy_install
      -  -usr/bin/f2py
      -  -usr/bin/f2py3
      -  -usr/bin/f2py3.8


  libnest2d:
    plugin: cmake
    cmake-parameters: 
      - -DLIBNEST2D_HEADER_ONLY=OFF
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    source: https://github.com/Ultimaker/libnest2d.git
    source-branch: "master"  
    after:
      - sentry-sdk


  pynest2d:
    plugin: cmake
    source: https://github.com/Ultimaker/pynest2d/archive/4.13-beta.tar.gz
    source-type: tar
    cmake-parameters: 
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    stage-packages:
      - libnlopt0
    after:
      - libnest2d



  cura-engine:
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
      - -DUSE_SYSTEM_LIBS=ON
      - -Wno-dev
      - -DPolyclipping_INCLUDE_DIRS=/usr/include/polyclipping
    source: https://github.com/Ultimaker/CuraEngine.git
    source-branch: "4.13.0"
    build-packages:
      - rapidjson-dev
    stage-packages:
      - libgomp1
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/cura-engine/2001-version-test.patch"
    after:
      - trimesh
    

  fdm-materials:
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
    source: https://github.com/Ultimaker/fdm_materials.git
    source-branch: "4.13.0"
    after: 
      - cura-engine


  uranium:
    plugin: cmake
    cmake-parameters: 
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
      - -DGETTEXT_MSGINIT_EXECUTABLE=msginit
      - -DGETTEXT_MSGMERGE_EXECUTABLE=msgmerge
      - -DCURA_BINARY_DATA_DIRECTORY=/usr/share/uranium
      - -DUM_NO_INSTALL_PLUGINS=UpdateChecker
    source: https://github.com/Ultimaker/Uranium.git
    source-branch: "4.13.0"
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/uranium/uranium.patch"
    stage-packages:
      - python3-numpy
      - python3-pyqt5
      - python3-pyqt5.qtopengl
      - python3-pyqt5.qtquick
      - python3-pyqt5.qtsvg
      - python3-scipy
      - python3-serial
      - qml-module-qtqml-models2
      - qml-module-qtquick-dialogs
    after:
      - cura-engine
      - fdm-materials
      - patches
    stage:
      -  -usr/bin/f2py
      -  -usr/bin/f2py3
      -  -usr/bin/f2py3.8
  

  cura:
    plugin: cmake
    cmake-parameters: 
      - -DCMAKE_BUILD_TYPE=RELEASE
      - -DCMAKE_INSTALL_PREFIX=/usr/
      - -DCMAKE_PREFIX_PATH="${SNAPCRAFT_STAGE}/usr"
      - -DURANIUM_DIR=${SNAPCRAFT_STAGE}/usr/share/uranium
      - -DCURA_VERSION=4.13.0
      - -DCURA_BUILDTYPE=SNAP
    source: https://github.com/Ultimaker/Cura.git
    source-branch: "4.13.0"
    stage-packages:
      - fonts-open-sans
      - python3-colorlog
      - python3-cryptography
      - python3-distutils
      - python3-keyring
      - python3-networkx
      - python3-pyqt5.qtopengl
      - python3-pyqt5.qtquick
      - python3-pyqt5.qtsvg
      - python3-requests
      - python3-zeroconf
      - qml-module-qt-labs-folderlistmodel
      - qml-module-qt-labs-settings
      - qml-module-qtquick-controls
      - qml-module-qtquick-controls2
      - qtwayland5
    override-pull: |
      snapcraftctl pull
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/cura/cura.patch"
    after:
      - desktop-qt5
      - uranium
      - patches
